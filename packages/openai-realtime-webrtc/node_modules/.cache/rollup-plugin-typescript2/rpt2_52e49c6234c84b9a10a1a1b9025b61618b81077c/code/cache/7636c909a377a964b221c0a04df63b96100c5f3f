{"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from 'eventemitter3';\nexport class WebRTCManager extends EventEmitter {\n    constructor(config = {}) {\n        super();\n        this.peerConnection = null;\n        this.dataChannel = null;\n        this.localStream = null;\n        this.ephemeralToken = null;\n        this.config = Object.assign({ iceServers: [{ urls: 'stun:stun.l.google.com:19302' }], model: 'gpt-4o-realtime-preview-2024-12-17', debug: false }, config);\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.peerConnection) {\n                throw new Error('WebRTC already initialized');\n            }\n            try {\n                console.log('[WebRTC] Starting initialization...');\n                if (this.config.tokenEndpoint) {\n                    console.log('[WebRTC] Getting ephemeral token from:', this.config.tokenEndpoint);\n                    this.ephemeralToken = yield this.getEphemeralToken();\n                    console.log('[WebRTC] Got ephemeral token');\n                }\n                else {\n                    console.log('[WebRTC] No token endpoint provided');\n                }\n                console.log('[WebRTC] Creating peer connection...');\n                this.peerConnection = new RTCPeerConnection({\n                    iceServers: this.config.iceServers\n                });\n                this.setupPeerConnectionHandlers();\n                console.log('[WebRTC] Setting up microphone...');\n                this.localStream = yield this.setupLocalMedia();\n                if (this.localStream) {\n                    const audioTrack = this.localStream.getAudioTracks()[0];\n                    if (audioTrack) {\n                        this.peerConnection.addTrack(audioTrack, this.localStream);\n                        console.log('[WebRTC] Added audio track');\n                    }\n                }\n                console.log('[WebRTC] Creating data channel...');\n                this.dataChannel = this.peerConnection.createDataChannel('oai-events', {\n                    ordered: true\n                });\n                this.setupDataChannelHandlers();\n                if (this.ephemeralToken) {\n                    console.log('[WebRTC] Starting negotiation...');\n                    yield this.completeNegotiation();\n                }\n                else {\n                    console.log('[WebRTC] No token available, skipping negotiation');\n                }\n            }\n            catch (error) {\n                this.cleanup();\n                throw new Error(`Failed to initialize WebRTC: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            }\n        });\n    }\n    sendData(data) {\n        if (!this.dataChannel || this.dataChannel.readyState !== 'open') {\n            throw new Error('Data channel not available');\n        }\n        if (typeof data === 'string') {\n            this.dataChannel.send(data);\n        }\n        else {\n            this.dataChannel.send(new Uint8Array(data));\n        }\n    }\n    isConnected() {\n        var _a;\n        return ((_a = this.peerConnection) === null || _a === void 0 ? void 0 : _a.connectionState) === 'connected';\n    }\n    isDataChannelOpen() {\n        var _a;\n        return ((_a = this.dataChannel) === null || _a === void 0 ? void 0 : _a.readyState) === 'open';\n    }\n    getConnectionState() {\n        var _a, _b, _c;\n        return {\n            connectionState: ((_a = this.peerConnection) === null || _a === void 0 ? void 0 : _a.connectionState) || 'new',\n            iceConnectionState: ((_b = this.peerConnection) === null || _b === void 0 ? void 0 : _b.iceConnectionState) || 'new',\n            dataChannelState: ((_c = this.dataChannel) === null || _c === void 0 ? void 0 : _c.readyState) || null,\n            isAudioStreaming: !!this.localStream\n        };\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.cleanup();\n            this.emit('disconnected');\n        });\n    }\n    dispose() {\n        this.cleanup();\n        this.removeAllListeners();\n    }\n    getEphemeralToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!this.config.tokenEndpoint) {\n                throw new Error('Token endpoint not configured');\n            }\n            const response = yield fetch(this.config.tokenEndpoint, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' }\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to get token: ${response.status}`);\n            }\n            const data = yield response.json();\n            return ((_a = data.client_secret) === null || _a === void 0 ? void 0 : _a.value) || data.token;\n        });\n    }\n    setupLocalMedia() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const constraints = {\n                    audio: this.config.audioConstraints || {\n                        echoCancellation: true,\n                        noiseSuppression: true,\n                        autoGainControl: true,\n                        sampleRate: 24000\n                    },\n                    video: false\n                };\n                return yield navigator.mediaDevices.getUserMedia(constraints);\n            }\n            catch (error) {\n                throw new Error(`Failed to get user media: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            }\n        });\n    }\n    completeNegotiation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.peerConnection || !this.ephemeralToken) {\n                console.log('[WebRTC] Missing peer connection or token');\n                return;\n            }\n            console.log('[WebRTC] Creating offer...');\n            const offer = yield this.peerConnection.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: false\n            });\n            yield this.peerConnection.setLocalDescription(offer);\n            const baseUrl = 'https://api.openai.com';\n            const model = this.config.model || 'gpt-4o-realtime-preview-2024-12-17';\n            const url = `${baseUrl}/v1/realtime?model=${model}`;\n            console.log('[WebRTC] Sending offer to:', url);\n            const response = yield fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/sdp',\n                    'Authorization': `Bearer ${this.ephemeralToken}`,\n                    'OpenAI-Beta': 'realtime=v1'\n                },\n                body: offer.sdp\n            });\n            if (!response.ok) {\n                const text = yield response.text();\n                console.error('[WebRTC] Failed response:', response.status, text);\n                throw new Error(`Failed to get answer: ${response.status} - ${text}`);\n            }\n            console.log('[WebRTC] Got answer from OpenAI');\n            const answerSdp = yield response.text();\n            const answer = {\n                type: 'answer',\n                sdp: answerSdp\n            };\n            yield this.peerConnection.setRemoteDescription(answer);\n            console.log('[WebRTC] Remote description set successfully');\n        });\n    }\n    setupPeerConnectionHandlers() {\n        if (!this.peerConnection)\n            return;\n        this.peerConnection.onconnectionstatechange = () => {\n            var _a;\n            const state = (_a = this.peerConnection) === null || _a === void 0 ? void 0 : _a.connectionState;\n            if (state === 'connected') {\n                this.emit('connected');\n            }\n            else if (state === 'failed') {\n                this.emit('connectionFailed', new Error('WebRTC connection failed'));\n            }\n            else if (state === 'disconnected' || state === 'closed') {\n                this.emit('disconnected', 'Connection closed');\n            }\n            this.emit('connectionStateChanged', this.getConnectionState());\n        };\n        this.peerConnection.ontrack = (event) => {\n            if (event.track) {\n                this.emit('audioTrackReceived', event.track);\n            }\n        };\n        this.peerConnection.ondatachannel = (event) => {\n            this.setupDataChannelHandlers(event.channel);\n        };\n    }\n    setupDataChannelHandlers(channel) {\n        const dc = channel || this.dataChannel;\n        if (!dc)\n            return;\n        dc.onopen = () => {\n            console.log('[WebRTC] Data channel opened');\n            this.emit('dataChannelReady');\n            this.emit('connectionStateChanged', this.getConnectionState());\n        };\n        dc.onclose = () => {\n            console.log('[WebRTC] Data channel closed');\n            this.emit('connectionStateChanged', this.getConnectionState());\n        };\n        dc.onerror = (error) => {\n            console.error('[WebRTC] Data channel error:', error);\n            this.emit('connectionFailed', new Error(`Data channel error: ${error}`));\n        };\n        dc.onmessage = (event) => {\n            this.emit('dataChannelMessage', event.data);\n        };\n    }\n    cleanup() {\n        if (this.localStream) {\n            this.localStream.getTracks().forEach(track => track.stop());\n            this.localStream = null;\n        }\n        if (this.dataChannel) {\n            this.dataChannel.close();\n            this.dataChannel = null;\n        }\n        if (this.peerConnection) {\n            this.peerConnection.close();\n            this.peerConnection = null;\n        }\n        this.ephemeralToken = null;\n    }\n    log(message, ...args) {\n        if (this.config.debug) {\n            console.log(`[WebRTCManager] ${message}`, ...args);\n        }\n    }\n}\nexport default WebRTCManager;\n//# sourceMappingURL=WebRTCManager.js.map","references":["/Users/rodneyfranklin/Development/personal/SpanishTutor/ClaudeSpanish/spanish-tutor-mvp/node_modules/eventemitter3/index.d.ts"],"map":"{\"version\":3,\"file\":\"WebRTCManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/core/WebRTCManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
